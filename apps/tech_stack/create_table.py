import hashlib

from config.local_settings import POSTGRESQL
import psycopg2


def create_github_calendar_table(github_id):
    github_id = github_id.lower().replace('-', '_')
    table_name = f'tech_stack_githubcalendar_{github_id}'

    # Calculate the SHA-256 hash
    sha256_hash = hashlib.sha256(github_id.encode()).hexdigest()
    truncated_hash = sha256_hash[:8]

    # Connect to the PostgreSQL database
    database = {
        'dbname': POSTGRESQL['default']['NAME'],
        'user': POSTGRESQL['default']['USER'],
        'password': POSTGRESQL['default']['PASSWORD'],
        'host': POSTGRESQL['default']['HOST'],
        'port': POSTGRESQL['default']['PORT'],
    }
    conn = psycopg2.connect(**database)
    cur = conn.cursor()

    query = psycopg2.sql.SQL("SELECT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = %s);")
    cur.execute(query, (table_name,))
    is_exist = cur.fetchone()[0]
    if not is_exist:
        create_table_query = psycopg2.sql.SQL(
            f"""
            create table {table_name}
            (
                id           bigint generated by default as identity primary key,
                author_date  timestamp with time zone not null,
                tech_name    varchar(50)              not null,
                lines        integer                  not null,
                repo_url     varchar(150),
                commit_hash  varchar(150),
                github_id_id varchar(100)
                constraint tech_stack_githubcal_github_id_id_{truncated_hash}_fk_tech_stac
                references tech_stack_githubuser
                deferrable initially deferred
            );
            alter table {table_name} owner to linuxgeek;
            """
        )

        cur.execute(create_table_query)

        conn.commit()
        print(f"Table '{table_name}' created successfully.")
    cur.close()
    conn.close()
